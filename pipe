pipeline{
      agent none
      parameters{
             choice( name:'environment', choices:['dev','qa'], description:'pick a env to deploy' )
             string( name:'r1', defaultValue:'1' , description: '')
             choice( name:'img', choices:['jboss:hardened'], description: 'pick any images' )
             string( name:'myservices', defaultValue:'mydevservices' , description: '')
             choice( name:'ms', choices:['dev','qa'], description: 'pick any ' )

      }

      stages{
         stage('dev'){
             agent{ label'dockergroup' }
              when{
                 environment name: 'environment', value:"dev"
               }
              steps{
                    sh  ' ./a.sh '
                    sh  ' img=$(./a.sh) '
                    sh  ' echo "myservices=$myservices  img=$img  r1=$r1  ms=$ms" >> sh.sh'
                    sh  ' cat compose.sh > sh.sh '
                    sh  ' chmod +x sh.sh '
                    sh  ' ./sh.sh '
                    sh  ' docker stack deploy -c docker-compose_ft.yml myqastack '
              }
         }
         stage('qa'){
             agent{ label'dockergroup' }
              when{
                 environment name: 'environment', value:"qa"
                 }
              steps{
                    
                    sh  ' echo "myservices=$myservices  img=$img  r1=$r1  ms=$ms" >> sh.sh'
                    sh  ' cat compose.sh > sh.sh '
                    sh  ' chmod +x sh.sh '
                    sh  ' ./sh.sh '
                    sh  ' docker stack deploy -c docker-compose_ft.yml myqastack '
              }
         }
      }
}

